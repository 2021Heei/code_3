/**                文档记录                              **/

/**                程序名 星穹列车出击 - 贪吃蛇大作战      **/
/**                创建者	未禾    时间 2023年5月21日       **/

// 分文件实现，头文件，源文件，测试文件

// 1. 蛇对象实现 ==> class Snake
/*
* 1.1 创建与地图等大的二维数组_snake记录蛇的位置，蛇头，蛇身，非蛇三个区域用不同符号标记
* 1.2 创建一维位置数组_pos，每个元素包含两个整数表示横坐标x和纵坐标y
* 1.3 记录蛇的长度_length
* 1.4 初始化_snake,_pos,_length
* 1.5 蛇的行为，初始时蛇向x轴正方向（即右方向）移动，默认每次往蛇头方向移动一格。蛇头一般有三个方向（无法向后方移动），蛇的行进方向再输入方向时沿输入的方向移动，本次未输入时将延着上次输入的方向运动，上次输入默认为x轴正方向（即右方向）移动
* 1.6 上移: 
* 1.7 下移: 
* 1.8 左移
* 1.9 右移
* 1.10 游戏判定 继续 & 失败 & 成功   
* 1.11 遇到围墙时的处理
* 1.12 遇到食物时的处理
* 
/

// 2. 地图对象实现 ==> class Map
/*
* 1.1 创建地图即二维数组_map，四周用围墙围起来，中间是活动范围，也是用不同符号表示
* 1.2 创建食物变量_food，
* 1.3 初始化地图_map，围墙和空白部分使用不同符号处理，初始化食物_food并确定初始食物的位置，不要与蛇的位置重合，不要在围墙上及围墙之外
* 1.4 
*
/

// 3. 食物对象实现 ==> class Food
/*
* 1.1 食物包括食物的符号表示变量_foodSign，食物的坐标位置_pos
* 1.2 初始化食物的坐标，默认为(0,0)，初始化食物的的符号，从Foods类的string变量foods中随机生成，注意食物可以与蛇坐标重合，但是不能与障碍物坐标重合
* 1.3 食物被吃之后更新食物变量的坐标和符号
*
/

// 4. 障碍物实现
/*
* 4.1 障碍物表示_obstacles，障碍物分为多组，每组有多个单个障碍物；这里的具体多少组，每组多少个单个障碍物是随机生成的，但是有均有最大值限制
* 4.2 障碍物生成注意要避开围墙，蛇，食物坐标；采用分组生成，对于每一组来说，先生成一个有效的随机坐标，依此坐标为基坐标，下一个障碍物将会随机在此坐标的上下左右四个有效位置中；在下一个坐标在前两个坐标的上下左右的所有的有效坐标中生成，锁着生成障碍物的增加，可选有效坐标将会越来越多（一般情况下）
* 4.3 
* 障碍物随分数变化，随时间变化
*/

// 5. 界面实现 ==> Menu()
/*
* 5.1 开始界面
* 5.2 游戏界面
* 主要地图显示 + 分数显示 + 用户显示 + 旋转动态效果显示 + 所用时间显示
* 5.3 颜色控制
*/

// 6. 游戏设置实现
// 分数系统实现
// 数据保存到文件和从文件读取数据实现 - 地图，蛇，食物，障碍物数据保存到文件
// 加载进度条实现
// 用户管理系统实现
// 排行榜系统实现
// 
// 
// 蛇AI实现
// 敌对AI蛇实现
// windows接口 - 音频实时接入实现
// 多进程 or 多线程 实现，防止卡顿
// 进阶 - 数据保存到数据库mysql等实现